---
export const prerender = true;

import Footer from "../../components/Footer.astro";
import Navbar from "../../components/Navbar.astro";
import Layout from "../../layouts/Layout.astro";
import { getOnAir, getAnimeInfo } from "animeflv-api";

// Generar rutas dinámicas para animes en emisión
export async function getStaticPaths() {
  const animes = await getOnAir();

  if (!animes || animes.length === 0) {
    console.warn("No se encontraron animes en emisión.");
    return [];
  }

  // Crear las rutas dinámicas basadas en `id`
  return animes.map((anime) => ({
    params: { id: anime.id }, // Usar el `id` directamente de `getOnAir`
  }));
}

// Obtener parámetros desde Astro
const { id } = Astro.params;

// Verifica si el parámetro "id" está disponible
if (!id) {
  throw new Error("ID no proporcionado en los parámetros.");
}

// Obtener datos del anime desde la API
const anime = await getAnimeInfo(id);

// Verifica si se obtuvieron los datos
if (!anime) {
  throw new Error(`Anime con ID ${id} no encontrado`);
}
---

<Layout title={`${anime.title} - AnimeFLV`}>
  <Navbar />
  <section>
    <div
      class="flex flex-col md:flex-row justify-between gap-4 items-start mx-2 py-2"
    >
      <div
        class="flex bg-white rounded-lg shadow dark:bg-gray-800 flex-col md:flex-row"
      >
        <!-- Contenedor de imagen y estado -->
        <div
          class="relative w-full md:w-48 flex-shrink-0 flex flex-col justify-start items-start"
        >
          <img
            src={anime.cover}
            alt={`Portada de ${anime.title}`}
            class="object-contain w-full h-72 md:w-48 md:h-auto rounded-t-lg md:rounded-l-lg md:rounded-t-none"
          />
          <span
            class="w-full bg-green-500 text-white text-center py-1 rounded-b-lg md:rounded-bl-lg md:rounded-br-none
            hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 transition ease-in duration-200 text-base font-semibold
            shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 mt-2"
          >
            {anime.status}
          </span>
        </div>

        <!-- Contenedor de contenido -->
        <form class="flex-auto p-6 overflow-y-auto">
          <div class="flex flex-wrap">
            <h1 class="flex-auto text-xl font-semibold text-white">
              {anime.title}
            </h1>
            <div
              class="text-xl font-semibold text-white border-[#01bcf2] bg-[#01bcf2] flex flex-col items-center"
            >
              <span class="text-gray-600">Popularidad</span>
              <span>{anime.rating} / 5</span>
            </div>
            <div
              class="flex flex-col w-full mt-2 text-sm font-medium text-gray-500 dark:text-gray-300"
            >
              {anime.alternative_titles.map((title) => <span>{title}</span>)}
            </div>
          </div>
          <div
            class="flex items-baseline mt-4 mb-6 text-gray-700 dark:text-gray-300"
          >
            <div class="flex flex-col space-x-2">
              <label class="text-start">
                {
                  anime.genres.map((genre) => (
                    <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2">
                      {genre}
                    </span>
                  ))
                }
              </label>
              <label class="text-start pt-5">
                {
                  (
                    <span class="inline-block bg-gray-200 rounded-lg px-3 py-1 text-sm font-semibold text-gray-700 mr-2">
                      {anime.synopsis}
                    </span>
                  )
                }
              </label>
            </div>
          </div>
          <div
            class="flex flex-col gap-2 mb-4 text-sm font-medium max-h-96 overflow-y-auto [&::-webkit-scrollbar]:w-2 [&::-webkit-scrollbar-track]:rounded-full [&::-webkit-scrollbar-track]:bg-neutral-700 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-thumb]:bg-orange-500 dark:[&::-webkit-scrollbar-track]:bg-neutral-700 dark:[&::-webkit-scrollbar-thumb]:bg-orange-500"
          >
            <span class="text-white text-lg">Lista de episodios</span>
            {
              anime.episodes.map((episode) => (
                <a
                  href={`/ver/${id}-${episode.number}`}
                  class="py-2 px-4 bg-[#01bcf2] hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-start text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 rounded-lg"
                >
                  <span>{anime.title}</span>
                  <span class="flex flex-col">Episodio: {episode.number}</span>
                </a>
              ))
            }
          </div>
        </form>
      </div>
    </div>
  </section>

  <Footer />
</Layout>
